- name: Import default config
  block:

    - name: Get types of the remote entered
      ansible.builtin.shell: "echo {{ lookup('ini', 'type', section=item, file=sarotate_paths_rclone_config_location) }}"
      loop: "{{ sarotate.remotes|lower }}"
      register: remote_type

    - name: Set variable for drive remote names
      set_fact:
        drive_remotes: "{{ remote_type.results | selectattr('stdout', '==', 'drive') | map(attribute='item') }}"
    
    - name: Set variable for union remote names
      set_fact:
        union_remotes: "{{ remote_type.results | selectattr('stdout', '==', 'union') | map(attribute='item') }}"

    - name: Get the upstreams of union remotes
      ansible.builtin.shell: "echo {{ lookup('ini', 'upstreams', section=item, file=sarotate_paths_rclone_config_location) }}"
      with_items: "{{ union_remotes }}"
      register: union_upstreams_var
      when: union_remotes is defined

    - name: Set variable for upstreams of union remotes
      set_fact:
        union_upstreams: "{{ union_upstreams_var.results | map(attribute='stdout') | map('split',': ') | join('\", \"') | replace(':', '') }}"
      when: union_upstreams_var is defined

    - name: test
      debug:
        msg: "echo {{ union_remotes }}"

    - name: Merge remote names and upstreams of both drive and union remotes
      set_fact:
        remote_name_var: "{{ remote_name_var | default([]) + item }}"
      loop:
        - "{{ drive_remotes | default([]) }}"
        - "{{ union_upstreams | default([]) }}"

    - name: Set variable for merged remote names
      set_fact:
        remote_name: "{{ remote_name_var | unique }}"
    
    - name: show remote names
      debug:
        msg: "{{ remote_name }}"